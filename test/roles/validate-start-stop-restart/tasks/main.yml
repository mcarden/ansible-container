---
# Assumptions:
# 1) import-build has already run
# 2) distros and tempdirs are in the variable-space
- name: Remove task.output
  file:
    path: ./task.output
    state: absent

- name: Run built containers detached
  shell: >
    ansible-container --debug --project-path
    {{ tempdir.path|quote }}/test-{{ distro.name|quote }} run --detached >>task.output 2>&1
  register: output
  ignore_errors: yes
  tags:
    - run
    - run_no_validate
    - restart
    - restart_no_validate
    - stop
    - stop_no_validate

- include: includes/show-output.yml output_file=./task.output registered_output="{{ output }}"

- name: Wait until built containers are running
  docker_container:
    name: "test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"
  register: container_run_status
  until: container_run_status.ansible_facts.docker_container.State.Status == 'running'
  tags:
    - restart
    - run

- name: Restart containers
  shell: >
    ansible-container --debug --project-path
    {{ tempdir.path|quote }}/test-{{ distro.name|quote }} restart >>task.output 2>&1
  register: output
  ignore_errors: yes
  tags:
    - restart
    - restart_no_validate

- include: includes/show-output.yml output_file=./task.output registered_output="{{ output }}"

- name: Get new container start times
  docker_container:
    name: "test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"
  register: container_restart_status
  until: container_restart_status.ansible_facts.docker_container.State.Status == 'running'
  tags:
    - restart

- name: Debug
  debug:
    msg: "{{ container_run_status }}"

- name: Ensure containers were restarted
  assert:
    that:
      - container_run_status.ansible_facts.docker_container.State.StartedAt != container_restart_status.ansible_facts.docker_container.State.StartedAt
  tags:
    - restart

- name: Stop containers
  shell: >
    ansible-container --debug --project-path
    {{ tempdir.path|quote }}/test-{{ distro.name|quote }} stop >>task.output 2>&1
  register: output
  ignore_errors: yes
  tags:
    - stop
    - stop_no_validate
    - run
    - run_no_validate
    - restart
    - restart_no_validate

- include: includes/show-output.yml output_file=./task.output registered_output="{{ output }}"

- name: Ensure containers were stopped
  docker_container:
    name: 'test{{ distro.name|replace("-","") }}_{{ distro.name }}_1'
    state: 'stopped'
  register: output
  failed_when: output.changed
  tags:
    - stop

